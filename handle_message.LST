C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE HANDLE_MESSAGE
OBJECT MODULE PLACED IN handle_message.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE handle_message.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <myhead.h>
   2          char send_message[50];
   3          int tempdegree;
   4          char *p;
   5          int android_flag = 0;
   6          void handle_message()
   7          {
   8   1          if(strncmp(strbuf, "test", 4) == 0)
   9   1              {
  10   2                      CR = 0;  
  11   2                      sprintf(send_message, "return test\n");
  12   2                      sendstr(send_message);
  13   2                      temp_lock = 1;
  14   2          }
  15   1              
  16   1              if(strncmp(strbuf, "GETTEMPERATURE", strlen("GETTEMPERATURE")) == 0)
  17   1              {
  18   2                      int i = 0;
  19   2                      gettemperature();
  20   2                      sprintf(send_message, "T = %d.%d\n", TH, TL);
  21   2                      sendstr(send_message);
  22   2                      
  23   2                      if(out1 == 1)
  24   2                              i = 1;
  25   2                      else 
  26   2                              i = 0;
  27   2                      sprintf(send_message, "out1 = %d\n", i);
  28   2                      sendstr(send_message);
  29   2              }
  30   1              if(strncmp(strbuf, "GETHUNIDITY", strlen("GETTEMPERATURE")) == 0)
  31   1              {
  32   2                      int i = 0;
  33   2                      gettemperature();
  34   2                      sprintf(send_message, "R = %d.%d\n", RH, RL);
  35   2                      sendstr(send_message);
  36   2                      
  37   2                      if(out2 == 1)
  38   2                              i = 1;
  39   2                      else 
  40   2                              i = 0;
  41   2                      sprintf(send_message, "out2 = %d\n", i);
  42   2                      sendstr(send_message);
  43   2              }
  44   1              if(strncmp(strbuf, "GETLIGHT", strlen("GETLIGHT")) == 0)
  45   1              {
  46   2                      int i = 0;
  47   2                      getled();
  48   2                      sendstr(ledstr);
  49   2                      if(out3 == 1)
  50   2                              i = 1;
  51   2                      else 
  52   2                              i = 0;
  53   2                      sprintf(send_message, "out3 = %d\n",i);
  54   2                      sendstr(send_message);
  55   2              }
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 2   

  56   1              if(strncmp(strbuf, "SETSTEER", strlen("SETSTEER")) == 0)
  57   1              {
  58   2                      p = strbuf;
  59   2                      tempdegree = 0;
  60   2                      p = p + 8;
  61   2                      
  62   2                      while(*p != '\0')
  63   2                      {
  64   3                              tempdegree = tempdegree * 10 + (*p - '0');
  65   3                              p++;
  66   3              }
  67   2                      //while(lock_2 == 1);
  68   2                      //lock_3 = 1;
  69   2                      
  70   2                      stop_interrupt();
  71   2                      pwm_value = turn(tempdegree);
  72   2                      InitSteering();
  73   2                      interrupt1_lock = 1;
  74   2                      interrupt3_lock = 1;
  75   2                      
  76   2                      delay_ms_steering(1000);
  77   2                      delay_ms_steering(1000);
  78   2                      delay_ms_steering(500);
  79   2                      StopSteering();
  80   2                      start_interrupt();
  81   2                      sendstr("OK\n");
  82   2                      interrupt1_lock = 0;
  83   2                      interrupt3_lock = 0;
  84   2                      android_control_lcd1602();
  85   2                      
  86   2                      //lock_3 = 0;
  87   2          }
  88   1              /*
  89   1              if(strncmp(strbuf, "SETTEMPMAX", strlen("SETTEMPMAX")) == 0)
  90   1              {
  91   1                  p = strbuf;
  92   1                      tempdegree = 0;
  93   1                      p = p + 10;
  94   1                      
  95   1                      while(*p != '\0')
  96   1                      {
  97   1                              tempdegree = tempdegree * 10 + (*p - '0');
  98   1                              p++;
  99   1              }
 100   1                      temp_max = tempdegree;
 101   1                      
 102   1          }
 103   1              
 104   1              if(strncmp(strbuf, "SETTEMPMIN", strlen("SETTEMPMIN")) == 0)
 105   1              {
 106   1                      p = strbuf;
 107   1                      tempdegree = 0;
 108   1                      p = p + 10;
 109   1                      
 110   1                      while(*p != '\0')
 111   1                      {
 112   1                              tempdegree = tempdegree * 10 + (*p - '0');
 113   1                              p++;
 114   1              }
 115   1                      temp_min = tempdegree;
 116   1                  
 117   1          }
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 3   

 118   1              
 119   1              if(strncmp(strbuf, "SETHUMIMAX", strlen("SETHUMIMAX")) == 0)
 120   1              {
 121   1                      p = strbuf;
 122   1                      tempdegree = 0;
 123   1                      p = p + 10;
 124   1                      
 125   1                      while(*p != '\0')
 126   1                      {
 127   1                              tempdegree = tempdegree * 10 + (*p - '0');
 128   1                              p++;
 129   1              }
 130   1                      humi_max = tempdegree;
 131   1                  
 132   1          }
 133   1              
 134   1              if(strncmp(strbuf, "SETHUMIMIN", strlen("SETHUMIMIN")) == 0)
 135   1              {
 136   1                  p = strbuf;
 137   1                      tempdegree = 0;
 138   1                      p = p + 10;
 139   1                      
 140   1                      while(*p != '\0')
 141   1                      {
 142   1                              tempdegree = tempdegree * 10 + (*p - '0');
 143   1                              p++;
 144   1              }
 145   1                      humi_min = tempdegree;
 146   1          }
 147   1              
 148   1              if(strncmp(strbuf, "SETLIGHTMAX", strlen("SETLIGHTMAX")) == 0)
 149   1              {
 150   1                  p = strbuf;
 151   1                      tempdegree = 0;
 152   1                      p = p + 11;
 153   1                      
 154   1                      while(*p != '\0')
 155   1                      {
 156   1                              tempdegree = tempdegree * 10 + (*p - '0');
 157   1                              p++;
 158   1              }
 159   1                      light_max = tempdegree;
 160   1          }
 161   1              
 162   1              if(strncmp(strbuf, "SETLIGHTMIN", strlen("SETLIGHTMIN")) == 0)
 163   1              {
 164   1                    p = strbuf;
 165   1                      tempdegree = 0;
 166   1                      p = p + 11;
 167   1                      
 168   1                      while(*p != '\0')
 169   1                      {
 170   1                              tempdegree = tempdegree * 10 + (*p - '0');
 171   1                              p++;
 172   1              }
 173   1                      light_min = tempdegree;
 174   1          }
 175   1              */
 176   1              if(strncmp(strbuf, "OUT1ON", strlen("OUT1ON")) == 0)
 177   1              {
 178   2                      out1 = 0;
 179   2          }
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 4   

 180   1              
 181   1              if(strncmp(strbuf, "OUT2ON", strlen("OUT2ON")) == 0)
 182   1              {
 183   2                      out2 = 0;
 184   2          }
 185   1              
 186   1              if(strncmp(strbuf, "OUT3ON", strlen("OUT3ON")) == 0)
 187   1              {
 188   2                      out3 = 0;               
 189   2          }
 190   1              
 191   1              if(strncmp(strbuf, "OUT1OFF", strlen("OUT1OFF")) == 0)
 192   1              {
 193   2                      out1 = 1;
 194   2          }
 195   1              
 196   1              if(strncmp(strbuf, "OUT2OFF", strlen("OUT2OFF")) == 0)
 197   1              {
 198   2                      out2 = 1;
 199   2          }
 200   1              
 201   1              if(strncmp(strbuf, "OUT3OFF", strlen("OUT3OFF")) == 0)
 202   1              {
 203   2                      out3 = 1;               
 204   2          }
 205   1              
 206   1              if(strncmp(strbuf, "SETRGB", strlen("SETRGB")) == 0)
 207   1              {
 208   2                      red = strbuf[6] - '0';
 209   2                      green = strbuf[7]- '0';
 210   2                      blue = strbuf[8] - '0';         
 211   2          }
 212   1              
 213   1              if(strncmp(strbuf, "BPMON", strlen("BPMON")) == 0)
 214   1              {
 215   2                      bpm = 1;        
 216   2          }
 217   1              
 218   1              if(strncmp(strbuf, "BPMOFF", strlen("BPMOFF")) == 0)
 219   1              {
 220   2                      bpm = 0;                
 221   2          }
 222   1              
 223   1              if(strncmp(strbuf, "SETMAX", strlen("SETMAX")) == 0)   //setmaxtemp1223
 224   1              {
 225   2                      p = strbuf;
 226   2                      p = p + 6;
 227   2                      
 228   2                      if(*p == 'T')
 229   2                      {
 230   3                              temp_max = 0;
 231   3                              p = p + 4;
 232   3                              if(*p == '\0')
 233   3                              {
 234   4                                      temp_max_flag = 0;
 235   4                                      temp_max = 100;
 236   4                                      
 237   4                                      return;
 238   4                              }
 239   3                              while(*p != '\0')
 240   3                              {
 241   4                                      temp_max = temp_max * 10 + (*p - '0');
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 5   

 242   4                                      p++;
 243   4                              }
 244   3                              temp_max_flag = 1;
 245   3                              
 246   3                      }
 247   2                      
 248   2                      if(*p == 'L')
 249   2                      {
 250   3                              light_max = 0;
 251   3                              p = p + 5;
 252   3                              if(*p == '\0')
 253   3                              {
 254   4                                      light_max_flag = 0;
 255   4                                      light_max = 99999;
 256   4                                      return;
 257   4                              }
 258   3                              while(*p != '\0')
 259   3                              {
 260   4                                      light_max = light_max * 10 + (*p - '0');
 261   4                                      p++;
 262   4                              }
 263   3                              light_max_flag = 1;
 264   3                      }
 265   2                      
 266   2                      if(*p == 'H')
 267   2                      {
 268   3                              humi_max = 0;
 269   3                              p = p + 4;
 270   3                              if(*p == '\0')
 271   3                              {
 272   4                                      humi_max_flag = 0;
 273   4                                      humi_max = 100;
 274   4                                      return;
 275   4                              }
 276   3                              while(*p != '\0')
 277   3                              {
 278   4                                      humi_max = humi_max * 10 + (*p - '0');
 279   4                                      p++;
 280   4                              }
 281   3                              humi_max_flag = 1;
 282   3                      }
 283   2          }
 284   1              
 285   1              if(strncmp(strbuf, "SETMIN", strlen("SETMIN")) == 0)   //setmaxtemp1223
 286   1              {
 287   2                      p = strbuf;
 288   2                      p = p + 6;
 289   2                      
 290   2                      if(*p == 'T')
 291   2                      {
 292   3                              temp_min = 0;
 293   3                              p = p + 4;
 294   3                              if(*p == '\0')
 295   3                              {
 296   4                                      temp_min_flag = 0;
 297   4                                      temp_min = -40;
 298   4                                      return;
 299   4                              }
 300   3                              while(*p != '\0')
 301   3                              {
 302   4                                      temp_min = temp_min * 10 + (*p - '0');
 303   4                                      p++;
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 6   

 304   4                              }
 305   3                              temp_min_flag = 1;
 306   3                              sprintf(send_message, "Th = %d, tempmin = %d\n", (int)TH, temp_min);
 307   3                              sendstr(send_message);
 308   3                      }
 309   2                      
 310   2                      if(*p == 'L')
 311   2                      {
 312   3                              light_min = 0;
 313   3                              p = p + 5;
 314   3                              if(*p == '\0')
 315   3                              {
 316   4                                      light_min_flag = 0;
 317   4                                      light_min = -1;
 318   4                                      return;
 319   4                              }
 320   3                              while(*p != '\0')
 321   3                              {
 322   4                                      light_min = light_min * 10 + (*p - '0');
 323   4                                      p++;
 324   4                              }
 325   3                              light_min_flag = 1;
 326   3                              sprintf(send_message, "T = %d\n", light_compare);
 327   3                          sendstr(send_message);
 328   3                      }
 329   2                      
 330   2                      if(*p == 'H')
 331   2                      {
 332   3                              humi_min = 0;
 333   3                              p = p + 4;
 334   3                              if(*p == '\0')
 335   3                              {
 336   4                                      humi_min_flag = 0;
 337   4                                      humi_min = 0;
 338   4                                      return;
 339   4                              }
 340   3                              while(*p != '\0')
 341   3                              {
 342   4                                      humi_min = humi_min * 10 + (*p - '0');
 343   4                                      p++;
 344   4                              }
 345   3                              humi_min_flag = 1;
 346   3                      }
 347   2          }
 348   1              
 349   1      
 350   1              
 351   1              if(strncmp(strbuf, "CARDSET", strlen("CARDSET")) == 0)
 352   1              {
 353   2                      char *q = setcard_buf;
 354   2                      p = strbuf;
 355   2                      p = p + 7;
 356   2                      while(*p != '\0')
 357   2                      {
 358   3                              *q = *p;
 359   3                              q++;
 360   3                              p++;
 361   3                      }
 362   2                      *q = '\0';
 363   2                      card_flag = 1;
 364   2          }
 365   1              
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 7   

 366   1              if(strncmp(strbuf, "STEERSET", strlen("STEERSET")) == 0)
 367   1              {
 368   2                      p = strbuf;
 369   2                      p = p + 8;
 370   2                      steer_degree = 0;
 371   2                      while(*p != '\0')
 372   2                      {
 373   3                              steer_degree = steer_degree * 10 + (*p - '0');
 374   3                              p++;
 375   3                      }
 376   2                      steer_flag = 1;
 377   2          }
 378   1              
 379   1              if(strncmp(strbuf, "GETOUT1", strlen("GETOUT1")) == 0)
 380   1              {
 381   2                      int i = 0;
 382   2                      if(out1 == 1)
 383   2                              i = 1;
 384   2                      else 
 385   2                              i = 0;
 386   2                      sprintf(send_message, "out1 = %d\n",i);
 387   2                      sendstr(send_message);
 388   2          }
 389   1              
 390   1              if(strncmp(strbuf, "GETOUT2", strlen("GETOUT2")) == 0)
 391   1              {
 392   2                      int i = 0;
 393   2                      if(out2 == 1)
 394   2                              i = 1;
 395   2                      else 
 396   2                              i = 0;
 397   2                      sprintf(send_message, "out2 = %d\n",i);
 398   2                      sendstr(send_message);
 399   2          }
 400   1              
 401   1              if(strncmp(strbuf, "GETOUT3", strlen("GETOUT3")) == 0)
 402   1              {
 403   2                      int i = 0;
 404   2                      if(out3 == 1)
 405   2                              i = 1;
 406   2                      else 
 407   2                              i = 0;
 408   2                      sprintf(send_message, "out3 = %d\n",i);
 409   2                      sendstr(send_message);
 410   2          }
 411   1              
 412   1              if(strncmp(strbuf, "SOUNDFLAG", strlen("SOUNDFLAG")) == 0)
 413   1              {
 414   2                      p = strbuf + 9;
 415   2                      if(*p == '1')
 416   2                              sound_flag = 1;
 417   2                      if(*p == '0')
 418   2                              sound_flag = 0;
 419   2          }
 420   1              
 421   1              if(strncmp(strbuf, "LIGHTFLAG", strlen("LIGHTFLAG")) == 0)
 422   1              {
 423   2                      p = strbuf + 9;
 424   2                      if(*p == '1')
 425   2                              redlight_flag = 1;
 426   2                      if(*p == '0')
 427   2                              redlight_flag = 0;
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 8   

 428   2          }
 429   1              
 430   1              if(strncmp(strbuf, "GETREDLIGHT", strlen("GETREDLIGHT")) == 0)
 431   1              {
 432   2                      int i = 0;
 433   2                      if(redlight_flag == 1)
 434   2                              i = 1;
 435   2                      else 
 436   2                              i = 0;
 437   2                      sprintf(send_message, "redlight = %d\n",i);
 438   2                      sendstr(send_message);
 439   2          }
 440   1              
 441   1              if(strncmp(strbuf, "GETSOUNDFLAG", strlen("GETSOUNDFLAG")) == 0)
 442   1              {
 443   2                      int i = 0;
 444   2                      if(sound_flag == 1)
 445   2                              i = 1;
 446   2                      else 
 447   2                              i = 0;
 448   2                      sprintf(send_message, "sound = %d\n",i);
 449   2                      sendstr(send_message);
 450   2          }
 451   1              
 452   1              if(strncmp(strbuf, "GETALLFLAGINIT", strlen("GETALLFLAGINIT")) == 0)
 453   1              {
 454   2                  int i = 0;
 455   2                      int rcc,gcc,bcc;
 456   2                      int bpmcc;
 457   2                      android_flag = 1;
 458   2              android_control_lcd1602();
 459   2                      CR = 0;  
 460   2                      gettemperature();
 461   2                      sprintf(send_message, "T = %d.%d\n", TH, TL);
 462   2                      sendstr(send_message);
 463   2                      Delay18ms();
 464   2                      sprintf(send_message, "R = %d.%d\n", RH, RL);
 465   2                      sendstr(send_message);
 466   2                      Delay18ms();
 467   2                      getled();
 468   2                      sendstr(ledstr);
 469   2                      Delay18ms();
 470   2                      /***********out1***********/
 471   2                      if(out1 == 1)
 472   2                              i = 1;
 473   2                      else 
 474   2                              i = 0;
 475   2                      sprintf(send_message, "out1 = %d\n", i);
 476   2                      sendstr(send_message);
 477   2                      Delay18ms();
 478   2                      /***********out2***********/
 479   2                      if(out2 == 1)
 480   2                              i = 1;
 481   2                      else 
 482   2                              i = 0;
 483   2                      sprintf(send_message, "out2 = %d\n", i);
 484   2                      sendstr(send_message);
 485   2                      Delay18ms();
 486   2                      /***********out3***********/
 487   2                      if(out3 == 1)
 488   2                              i = 1;
 489   2                      else 
C51 COMPILER V9.52.0.0   HANDLE_MESSAGE                                                    08/24/2015 23:09:53 PAGE 9   

 490   2                              i = 0;
 491   2                      sprintf(send_message, "out3 = %d\n",i);
 492   2                      sendstr(send_message);
 493   2                      Delay18ms();
 494   2                      /*********led******************/
 495   2                      
 496   2                      if(red == 0) rcc = 0; else rcc = 1;
 497   2                      if(green == 0) gcc = 0; else gcc = 1;
 498   2                      if(blue == 0) bcc = 0; else bcc = 1;
 499   2                      sprintf(send_message, "RGB = %d%d%d\n", rcc, gcc ,bcc);
 500   2                      sendstr(send_message);
 501   2                      Delay18ms();
 502   2                      /**************bpm****************/
 503   2                      if(bpm == 1)
 504   2                              bpmcc = 1;
 505   2                      else 
 506   2                              bpmcc = 0;
 507   2                      sprintf(send_message, "bpm = %d\n", bpmcc);
 508   2                      sendstr(send_message);
 509   2                      Delay18ms();
 510   2                      /**********************soundflag*************/
 511   2                      if(sound_flag == 1)
 512   2                              i = 1;
 513   2                      else 
 514   2                              i = 0;
 515   2                      sprintf(send_message, "sound = %d\n",i);
 516   2                      sendstr(send_message);
 517   2                      /*******************redlight**************/
 518   2                      if(redlight_flag == 1)
 519   2                              i = 1;
 520   2                      else 
 521   2                              i = 0;
 522   2                      sprintf(send_message, "redlight = %d\n",i);
 523   2                      sendstr(send_message);
 524   2                      Delay18ms();
 525   2                      sprintf(send_message, "REFRESHOK\n");
 526   2                      sendstr(send_message);
 527   2      
 528   2          }
 529   1              if(strncmp(strbuf, "EXIT", strlen("EXIT")) == 0)
 530   1              {
 531   2                  sendstr("EXITOK\n");
 532   2                      PCA_init();
 533   2                      bpm = 1;
 534   2                      Delay500ms();
 535   2                      bpm = 0;
 536   2                      android_flag = 0;
 537   2                      normal_lcd1602_show();
 538   2          }
 539   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4286    ----
   CONSTANT SIZE    =    408    ----
   XDATA SIZE       =     57      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
