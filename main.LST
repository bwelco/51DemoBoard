C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <myhead.h>
   2          
   3          // int T  温度
   4          // int R 湿度  使用gettemperature();后可以打印出温湿度的值
   5          int recv_lock = 0;
   6          unsigned char flag1 = 0,flag2 = 0,temp1,temp2;
   7          char strbuf[50] = {0};
   8          int posi = 0;
   9          int temp_lock = 0;
  10          int card_id_posi = 0;
  11          char cardid[20] = {0};
  12          char cardid_temp[20];
  13          int card_id_count_flag = 0;
  14          char tab1[20];
  15          char tab2[20];
  16          
  17          int temp_max = 100;
  18          int temp_min = -40;
  19          int light_max = 99999;
  20          int light_min = -1;
  21          int humi_max = 100;
  22          int humi_min = 0;
  23          
  24          int temp_max_flag = 0;
  25          int temp_min_flag = 0;
  26          
  27          int light_max_flag = 0;
  28          int light_min_flag = 0;
  29          
  30          int humi_max_flag = 0;
  31          int humi_min_flag = 0;
  32          
  33          int redlight_flag = 0;
  34          int sound_flag = 0;
  35          
  36          int steer_flag = 0;
  37          int card_flag = 0;
  38          char led_set[4];
  39          char setcard_buf[15];
  40          int steer_degree = 0;
  41          
  42          int lock_2 = 0;
  43          int lock_3 = 0;
  44          int card_flag_c = 0;
  45          int delay_flag = 0;
  46          int testflag = 0;
  47          
  48          char Sys_init_info[100] ={ "51 Demo Board\r\n"  
  49                                                             "Copyright (c) 2016 bwelco <1143955880@qq.com>\r\n"     
  50                                                             "Build Date 2016-01-30\r\n"     
  51                                                             "Version 1.0\r\n"                     };
  52          int main()
  53          {       
  54   1              bpm_off();
  55   1          system_init();      
C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 2   

  56   1              sendstr(Sys_init_info);
  57   1              sendstr("Programme Init Success. Baud:9600\n\t");
  58   1              led_set[0] = '1';
  59   1              led_set[1] = '1';
  60   1              led_set[2] = '1';
  61   1              while(1)
  62   1              {               
  63   2                      while(recv_lock != 1)
  64   2                      {
  65   3                              /*
  66   3                                      红外联动蜂鸣器：模拟家庭安全卫士
  67   3                                      人体红外检测到人                     蜂鸣器开
  68   3                                      人体红外未检测到人                   蜂鸣器关      
  69   3                              */
  70   3                              if(redlight_flag == 1)
  71   3                              {
  72   4                                      if(redlight == 1)
  73   4                                          bpm_on();
  74   4                                      else
  75   4                                              bpm_off();
  76   4                              }
  77   3      
  78   3                              /* 板子上的按键按下的时候，将舵机复位成90°*/
  79   3                              if(mykey == 0)
  80   3                              {
  81   4                                      normal_lcd1602_show();
  82   4                                      while(lock_2 == 1);
  83   4                                      lock_3 = 1;
  84   4                                      
  85   4                                      bpm_on();
  86   4                                      stop_interrupt();
  87   4                                      pwm_value = turn(90);
  88   4                                      InitSteering();
  89   4                                      interrupt1_lock = 1;
  90   4                                      interrupt3_lock = 1;
  91   4                                      normal_lcd1602_show();
  92   4                                      
  93   4                                      delay_ms_steering(1000);
  94   4                                      delay_ms_steering(1000);
  95   4                                      delay_ms_steering(500);
  96   4                                      StopSteering();
  97   4                                      start_interrupt();
  98   4                                      sendstr("OK\n");
  99   4                                      interrupt1_lock = 0;
 100   4                                      interrupt3_lock = 0;
 101   4                                      bpm_off();
 102   4                                                                      
 103   4                                      lock_3 = 0;
 104   4                                      normal_lcd1602_show();
 105   4                                      
 106   4                              }
 107   3      
 108   3                              /*      
 109   3                                      声音联动：模拟声控开关
 110   3                                      声音值到达特定值（电位器可调）       输出三开
 111   3                                      声音值再次到达特定值（电位器可调）   输出三关
 112   3                               */
 113   3                              if(sound_key == 0 && sound_flag == 1)              //声控开关
 114   3                              {
 115   4                                      if(testflag == 0)
 116   4                                      {
 117   5                                              out3 = 0;
C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 3   

 118   5                                          sprintf(send_message, "out3 = 0\n");
 119   5                                          sendstr(send_message);
 120   5      
 121   5                                              /*声控开关接收延时*/
 122   5                                              delay_ms_steering(1000);
 123   5                                              delay_ms_steering(1000);
 124   5                                              delay_ms_steering(500);
 125   5      
 126   5                                              testflag = 1;
 127   5                                      
 128   5                                      }
 129   4                                      else if(testflag == 1)
 130   4                                      {
 131   5                                              out3 = 1;
 132   5                                          sprintf(send_message, "out3 = 1\n");
 133   5                                          sendstr(send_message);
 134   5      
 135   5                                                      /*声控开关接收延时*/
 136   5                                              delay_ms_steering(1000);
 137   5                                              delay_ms_steering(1000);
 138   5                                              delay_ms_steering(500);
 139   5                                         
 140   5                                              testflag = 0;
 141   5                                      
 142   5                                      }
 143   4                              
 144   4                  }
 145   3      
 146   3                              /*
 147   3                                      温度联动输出一：模拟空调制热
 148   3                                  当前温度值 < 下限值                 输出一开
 149   3                                  当前温度值 > 上限值                 输出一关
 150   3                              */
 151   3                              
 152   3                              if(temp_min_flag == 1 && temp_min > (int)TH)
 153   3                              {
 154   4                                      out1 = 0;
 155   4                                      sprintf(send_message, "out1 = 0\n");    //温度 < 下线值  输出1开
 156   4                                      sendstr(send_message);
 157   4                              }
 158   3                              
 159   3                              
 160   3                              if(temp_max_flag == 1 && (int)TH > temp_max)
 161   3                              {
 162   4                                      out1 = 1;
 163   4                                      sprintf(send_message, "out1 = 1\n");    //温度 > 上限值  输出1关
 164   4                                      sendstr(send_message);
 165   4                              }
 166   3      
 167   3                              /*
 168   3                                      湿度联动输出二：模拟排湿风扇
 169   3                              当前湿度值 < 下限值                 输出二关
 170   3                              当前湿度值 > 上限值                 输出二开                            
 171   3                              */
 172   3                              
 173   3                              if(humi_max_flag == 1 && (int)RH > humi_max)
 174   3                              {
 175   4                                      out2 = 0;
 176   4                                      sprintf(send_message, "out2 = 1\n");    //湿度 > 上限值  输出2关
 177   4                                      sendstr(send_message);
 178   4                              }
 179   3                              
C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 4   

 180   3                              if(humi_min_flag == 1 && (int)RH < humi_min)
 181   3                              {
 182   4                                      out2 = 1;
 183   4                                      sprintf(send_message, "out2 = 0\n");    //湿度 < 下限值  输出2开
 184   4                                      sendstr(send_message);
 185   4                              }
 186   3      
 187   3                              /*
 188   3                                      光照联动LED：模拟自动路灯
 189   3                              当前光照值 < 下限值                 LED开
 190   3                              当前光照值 > 上限值                 LED关                        
 191   3                              */
 192   3                              
 193   3                              if(light_min_flag == 1 && light_compare < light_min)
 194   3                              {
 195   4                                      //out3 = 0;
 196   4                                      //sprintf(send_message, "out3 = 0\n");    //光照 < 下限值  输出3开
 197   4                              //      sendstr(send_message);
 198   4                                      
 199   4                                      red = led_set[0] - '0';
 200   4                              green = led_set[1]- '0';
 201   4                              blue = led_set[2] - '0';                
 202   4                              }
 203   3                              
 204   3                              if(light_max_flag == 1 && light_compare > light_max)
 205   3                              {
 206   4                              //      out3 = 1;
 207   4                              //      sprintf(send_message, "out3 = 1\n");    //光照 > 上限值  输出3关
 208   4                              //      sendstr(send_message);
 209   4                                      
 210   4                                      red = 1;
 211   4                              green = 1;
 212   4                              blue = 1;       
 213   4                              }
 214   3      
 215   3                              /*
 216   3                                   检测到RFID读卡器读取中断，向上位机传输卡号
 217   3                              */
 218   3      
 219   3                              if(flag2 == 1)
 220   3                              {
 221   4                                      /* 第一次,往cardid_temp缓冲区里面写值,并发送 */
 222   4                                      if(card_id_count_flag == 0)                
 223   4                                      {
 224   5                                              strcpy(cardid_temp, cardid);
 225   5                                              card_id_count_flag++;
 226   5                                              sprintf(send_message, "*card id = %s#\n", cardid);
 227   5                                              sendstr(send_message);
 228   5                                      }
 229   4                                      /* 跟之前的缓冲区卡号不一样     */
 230   4                                      if(strcmp(cardid_temp, cardid) != 0)   
 231   4                                      {
 232   5                                              sprintf(send_message, "*card id = %s#\n", cardid);
 233   5                                              sendstr(send_message);
 234   5                                              strcpy(cardid_temp, cardid);
 235   5                                      }
 236   4                              
 237   4                                      /* 卡号不匹配 */
 238   4                                      if(strcmp(cardid, setcard_buf) != 0)
 239   4                                      {
 240   5                                              continue;
 241   5                                      }
C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 5   

 242   4      
 243   4                                      /* 卡号匹配并且卡值设置打开 */
 244   4                                      if(steer_flag == 1 && card_flag == 1 && 
 245   4                                              (strcmp(cardid, setcard_buf) == 0))
 246   4                                      {
 247   5                                              normal_lcd1602_show();
 248   5                                              while(lock_2 == 1);
 249   5                                              lock_3 = 1;
 250   5                                              
 251   5                                              bpm_on();
 252   5                                              stop_interrupt();
 253   5                                              pwm_value = turn(steer_degree);
 254   5                                              InitSteering();
 255   5                                              interrupt1_lock = 1;
 256   5                                              interrupt3_lock = 1;
 257   5                                              normal_lcd1602_show();
 258   5                                              
 259   5                                              delay_ms_steering(1000);
 260   5                                              delay_ms_steering(1000);
 261   5                                              delay_ms_steering(500);
 262   5                                              StopSteering();
 263   5                                              start_interrupt();
 264   5                                              sendstr("OK\n");
 265   5                                              interrupt1_lock = 0;
 266   5                                              interrupt3_lock = 0;
 267   5                                              bpm_off();
 268   5                                              
 269   5                                              lock_3 = 0;
 270   5                                              normal_lcd1602_show();;
 271   5                                              
 272   5                      }
 273   4                                      stop_interrupt();               
 274   4                              /* 清空读卡器缓冲区 */  
 275   4                                      while(S2CON&S2RI)
 276   4                                      {
 277   5                                              S2CON&=~S2RI;
 278   5                                              temp2=S2BUF;
 279   5                                      }
 280   4                                      flag2 = 0;
 281   4                                      start_interrupt();
 282   4                                      
 283   4                              }
 284   3              }
 285   2                      handle_message();
 286   2                      recv_lock = 0;
 287   2                      
 288   2              }
 289   1      }
 290          /* 延时函数 */
 291          void sound_delay(unsigned int z)
 292          {                                                                                                                                                                                          
 293   1          unsigned int i,j;
 294   1          for(i=z;i>0;i--)
 295   1              for(j=110;j>0;j--);
 296   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1224    ----
   CONSTANT SIZE    =    116    ----
   XDATA SIZE       =    307    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.00   MAIN                                                                  02/10/2016 19:59:10 PAGE 6   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
